[IO]
src_datasets=[('/home/dwu/trainData/deep_denoiser_ensemble/data/mayo_2d_3_layer_mean/dose_rate_4.h5', '/home/dwu/trainData/uncertainty_prediction/denoising_results/mayo_2d_3_layer_mean/l2_depth_3/dose_rate_4/dose_rate_4.h5')]
dst_datasets=[('/home/dwu/trainData/deep_denoiser_ensemble/data/mayo_2d_3_layer_mean/dose_rate_1.h5', '/home/dwu/trainData/uncertainty_prediction/denoising_results/mayo_2d_3_layer_mean/l2_depth_3/dose_rate_4/dose_rate_4.h5')]
manifest='/home/dwu/trainData/deep_denoiser_ensemble/data/mayo_2d_3_layer_mean/manifest.csv'
output_dir='/home/dwu/trainData/uncertainty_prediction/denoising_results/mayo_2d_3_layer_mean/l2_depth_3/dose_rate_4/uncertainty_model'
train=
valid=['L291','L143','L067']
# train=['L291']
# valid=['L291']
# the final output directory will be os.path.join(outdir, tag)
tag='l2_depth_5/img'
checkpoint=

[Train]
device="0"
lr=[1e-4, 3e-5, 1e-5]
epochs=[20, 50, 100]
save_freq=5
# whether to remove all the previous log files for a new run
relog=1

[Data]
patch_size=${Network:input_shape}
num_patches_per_slice=1
num_slices_per_batch=1
norm=1000
scale_y=100
flip=1
verbose=0

[Network]
input_shape=(640,640,2)
output_channel=1
nconv_per_module=2
down_features=(12,24,48,96,192)
bottleneck_features=384
# use blank to keep symmetry with the downsample path
up_features=
strides=(2,2,2,2,2)
use_adding=0
use_bn=0
use_bilinear_upsampling=1
dropout_rate=0.0
use_relu_output=0
lrelu=0.2

[Display]
islice=95
norm_x=1000
vmin_x=-160
vmax_x=240
norm_y=100
vmin_y=0
vmax_y=500